<?php
//$Id: og_wiki.test,v 1.1 2008/07/15 17:17:26 weitzman Exp $

require_once dirname(__FILE__). '/og_testcase.php';

class OgWiki extends OgTestCase {
  function get_info() {
    return array('name'  => t('Og wiki content type test'),
                 'desc'  => t('Tests wiki content (editable within a group).'),
                 'group' => 'Organic groups');
  }
  
  function testOgWiki() {
    $og_type = $this->drupalCreateContentType(array(
     	'description' => $this->randomName(32, "description ... "),
      'help' => $this->randomName(32, "description ... ")));
    
    $og_type_name = $og_type->name;
    $og_type_hn = str_replace("_", "-", $og_type_name);
    menu_rebuild();

    $this->drupalVariableSet('og_content_type_usage_'. $og_type_name, 'group');

    // Prepare & login admin user
    $admin_user = $this->drupalCreateUserRolePerm(array('administer content types', 'administer nodes', 'access content', 'create groups', "create $og_type_hn content", "edit $og_type_hn content"));
    $this->_browser = new SimpleBrowser();
    $this->drupalLoginUser($admin_user);
    
    // Create & load new group 
    $gid = $this->addOg($og_type_name, OG_OPEN);
    $node = node_load($gid);
    
    // Previously, the simpletest expected the Page content type to be group-enabled.
    // Here, I'm creating a new one.
    $og_post_type = $this->drupalCreateContentType(array(
    	'description' => $this->randomName(32, "description ... "),
      'help' => $this->randomName(32, "description ... ")));

    $og_post_type_name = str_replace("_", "-", $og_post_type->name);
    menu_rebuild();
    // Set this to be a pretty much standard group post. Here it needs underscores, not hyphens
    // So I use $og_post_type->name
    $this->drupalVariableSet('og_content_type_usage_'.$og_post_type->name, 'group_post_wiki_mail');

    // Prepare & login everyman user
    $this->_browser = new SimpleBrowser();
    $web_user = $this->drupalCreateUserRolePerm(array('access content', "create $og_post_type->name content"));
    $this->drupalLoginUser($web_user);
    
    $url = url("og/subscribe/$gid");
    $ret = $this->get($url, FALSE, FALSE, TRUE);
    $this->assertTrue($ret, " [browser] GET $url");
    $this->assertWantedRaw(t('Are you sure you want to join the group %title?', array('%title' => $node->title)),
                            "Confirmation text found.");
    $this->clickSubmit("Join");

    $this->assertNoUnwantedRaw(t('Page not found'), 'page was found.');
    $this->assertWantedRaw(t('You are now a member of the <em>@group', array('@group' => $node->title)),
                                'User subscribed to group - text not found.');
    

    // --- Post content to the recently joined group
    $edit = array();
    $title = '!SimpleTest og test node! ' . $this->randomName(10);
    $edit['title']          = $title;
    $edit['body']           = '!SimpleTest og test body! ' . $this->randomName(32) . ' ' . $this->randomName(32);
    //$edit['og_public']      = true;
    $edit['og_groups[' . $gid . ']'] = true;
    $this->drupalPost("node/add/".$og_post_type_name, $edit, t('Save'));

    // Check for success
    $this->assertWantedRaw(t('has been created.', array ('%post' => node_get_types('name', 'page'), '%title' => $title)), 'post created');
    
    $url = url("node/$gid");
    $ret = $this->get($url, FALSE, FALSE, TRUE);
    $this->assertTrue($ret, " [browser] GET $url");
    $this->assertWantedText(t($edit['title']), 'Group node title found.');
    $node = node_load(array('title' => $edit['title']));
    //print_r($node);
    $this->assertNotNull($node, 'Node found in database. %s');
    
    $url = url('og/my');
    $ret = $this->get($url, FALSE, FALSE, TRUE);
    $n = node_load($gid);
    $t = $n->title;
    $this->assertWantedRaw($t, 'The group joined appears on the My Groups page.');

    // Create a superuser
    $super_admin_user = $this->drupalCreateUserRolePerm(array('administer content types', 'administer organic groups', 'administer nodes', 'access content', 'create groups', "create $og_type_hn content", "edit $og_type_hn content"));
    $this->_browser = new SimpleBrowser();
    // Because drupalLogout is not accessible here
    $this->drupalGet('logout'); 
    // Log in the administrator
    $this->_browser = new SimpleBrowser();
    $this->drupalLoginUser($super_admin_user);
    
    $url = url('og/activity');
    $ret = $this->get($url, FALSE, FALSE, TRUE);
    $this->assertWantedRaw($t, 'The new group appears on the administrators group activity page');


    // Line up a second person to join that group
    $this->_browser = new SimpleBrowser();
    $web_user_2 = $this->drupalCreateUserRolePerm(array('access content', "create $og_post_type->name content"));
    $this->drupalLoginUser($web_user_2);
    $url = url("og/subscribe/$gid");
    $ret = $this->get($url, FALSE, FALSE, TRUE);
    $this->assertTrue($ret, " [browser] GET $url"); 
    $group_node = node_load($gid);
    $this->assertWantedRaw(t('Are you sure you want to join the group %title?', array('%title' => $group_node->title)),
                            "Confirmation text found.");
    $this->clickSubmit("Join");

    $this->assertNoUnwantedRaw(t('Page not found'), 'page was found.');
    $this->assertWantedRaw(t('You are now a member of the <em>@group', array('@group' => $group_node->title)),
                                'User subscribed to group - text not found.');

    $url = url('node/'.$node->nid);
    $elsesnode = $this->get($url, FALSE, FALSE, TRUE);
    $this->assertWantedRaw(t('Edit'), 'Wiki node editable by others.');


    node_delete($node->nid);
    node_delete($gid);
  }
}